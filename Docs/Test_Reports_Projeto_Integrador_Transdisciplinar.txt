Projeto Integrador Transdisciplinar II

Test Reports

Nome: Felipe Leonardo Nunes Santos
Universidade Positivo - UP
RGM: 27619443
Semestre: 7


#### Simulações de Testes Backend - Endpoints de Cart - Todos os testes executados com sucesso

1. GET /api/Cart/GetCartByUserId

Parâmetro:
- userId: "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7"

Resposta Esperada (200 OK):
[
  {
    "id": "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7",
    "userId": "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7",
    "productId": "91A2F2A4-09F0-4D4F-B487-9051F5F30B47",
    "productName": "Cupcake de Avelã",
    "price": 20,
    "quantity": 1
  }
]
Resultado do Teste: SUCESSO

2. POST /api/Cart/AddProductCart

Corpo da Requisição:
{
  "userId": "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7",
  "productId": "91A2F2A4-09F0-4D4F-B487-9051F5F30B47",
  "productName": "Cupcake de Avelã",
  "price": 20,
  "quantity": 1
}

Resposta Esperada (200 OK):
{
  "id": "3C599DC3-2180-496D-98B2-9D420EF02B91",
  "userId": "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7",
  "productId": "91A2F2A4-09F0-4D4F-B487-9051F5F30B47",
  "productName": "Cupcake de Avelã",
  "price": 20,
  "quantity": 1
}
Resultado do Teste: SUCESSO

3. POST /api/Cart/UpdateProductCart

Parâmetro:
- cartId: "3C599DC3-2180-496D-98B2-9D420EF02B91"

Corpo da Requisição:
{
  "userId": "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7",
  "productId": "91A2F2A4-09F0-4D4F-B487-9051F5F30B47",
  "productName": "Cupcake de Avelã",
  "price": 20,
  "quantity": 2
}

Resposta Esperada (200 OK):
{
  "id": "3C599DC3-2180-496D-98B2-9D420EF02B91",
  "userId": "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7",
  "productId": "91A2F2A4-09F0-4D4F-B487-9051F5F30B47",
  "productName": "Cupcake de Avelã",
  "price": 20,
  "quantity": 2
}
Resultado do Teste: SUCESSO

4. DELETE /api/Cart/RemoveProductCart

Corpo da Requisição:
{
  "id": "3C599DC3-2180-496D-98B2-9D420EF02B91",
  "userId": "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7",
  "productId": "91A2F2A4-09F0-4D4F-B487-9051F5F30B47",
  "productName": "Cupcake de Avelã",
  "price": 20,
  "quantity": 2
}

Resposta Esperada (200 OK)
Resultado do Teste: SUCESSO

5. DELETE /api/Cart/RemoveAllProductsCart

Parâmetro:
- userId: "B1A87A27-66A7-4C3F-8F0C-5F028AD9C5A7"

Resposta Esperada (200 OK)
Resultado do Teste: SUCESSO


---

### Simulações de Testes Backend - Endpoints de Favorites - Todos os testes executados com sucesso

1. GET /api/Favorite/GetFavoriteByUserId

Parâmetro:
- userId: "F2C23568-9A72-4F23-9B77-6D768E6895A4"

Resposta Esperada (200 OK):
[
  {
    "id": "D506D4A4-3E4F-4B68-8D7C-28F7647432E4",
    "userId": "F2C23568-9A72-4F23-9B77-6D768E6895A4",
    "productId": "7D82A4F2-04D1-41BE-B2DC-A6E8D6237A1A"
  }
]
Resultado do Teste: SUCESSO

2. POST /api/Favorite/CreateFavorite

Corpo da Requisição:
{
  "userId": "F2C23568-9A72-4F23-9B77-6D768E6895A4",
  "productId": "7D82A4F2-04D1-41BE-B2DC-A6E8D6237A1A"
}

Resposta Esperada (200 OK):
{
  "id": "D506D4A4-3E4F-4B68-8D7C-28F7647432E4",
  "userId": "F2C23568-9A72-4F23-9B77-6D768E6895A4",
  "productId": "7D82A4F2-04D1-41BE-B2DC-A6E8D6237A1A"
}
Resultado do Teste: SUCESSO

3. DELETE /api/Favorite/DeleteFavorite

Corpo da Requisição:
{
  "userId": "F2C23568-9A72-4F23-9B77-6D768E6895A4",
  "productId": "7D82A4F2-04D1-41BE-B2DC-A6E8D6237A1A"
}

Resposta Esperada (200 OK)
Resultado do Teste: SUCESSO

### Simulações de Testes Backend - Endpoints de Order - Todos os testes executados com sucesso

1. GET /api/Order/GetAll

Resposta Esperada (200 OK):
[
  {
    "id": "DA0A8F7C-A07C-429F-B064-7F2F14A1B647",
    "userId": "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A",
    "userName": "John Doe",
    "userEmail": "johndoe@example.com",
    "orderNumber": "ORD-1001",
    "paymentMethod": "Credit Card",
    "address": "123 Main St",
    "city": "Springfield",
    "region": "Illinois",
    "postalCode": "62701",
    "total": 100,
    "orderStatus": "Enviado",
    "created": "2024-11-30T21:26:53.922Z",
    "lastUpdated": "2024-11-30T21:26:53.922Z"
  }
]
Resultado do Teste: SUCESSO

2. GET /api/Order/GetOrdersByUserId

Parâmetro:
- userId: "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A"

Resposta Esperada (200 OK):
[
  {
    "id": "DA0A8F7C-A07C-429F-B064-7F2F14A1B647",
    "userId": "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A",
    "userName": "John Doe",
    "userEmail": "johndoe@example.com",
    "orderNumber": "ORD-1001",
    "paymentMethod": "Credit Card",
    "address": "123 Main St",
    "city": "Springfield",
    "region": "Illinois",
    "postalCode": "62701",
    "total": 100,
    "orderStatus": "Enviado",
    "created": "2024-11-30T21:26:53.926Z",
    "lastUpdated": "2024-11-30T21:26:53.926Z"
  }
]
Resultado do Teste: SUCESSO

3. GET /api/Order/GetOrdersDetails

Parâmetro:
- orderId: "DA0A8F7C-A07C-429F-B064-7F2F14A1B647"

Resposta Esperada (200 OK):
[
  {
    "id": "46A2E9A2-9A0A-4ABF-BF43-8D573E83190A",
    "orderId": "DA0A8F7C-A07C-429F-B064-7F2F14A1B647",
    "productId": "A3E37B80-75B9-4E16-B28E-1B1D8B635539",
    "userId": "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A",
    "productName": "Laptop",
    "quantity": 1,
    "price": 100
  }
]
Resultado do Teste: SUCESSO

4. POST /api/Order/CreateOrder

Corpo da Requisição:
{
  "orderDTO": {
    "userId": "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A",
    "userName": "John Doe",
    "userEmail": "johndoe@example.com",
    "orderNumber": "ORD-1002",
    "paymentMethod": "Credit Card",
    "address": "123 Main St",
    "city": "Springfield",
    "region": "Illinois",
    "postalCode": "62701",
    "total": 150
  },
  "orderDetailDTOs": [
    {
      "userId": "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A",
      "orderId": "DA0A8F7C-A07C-429F-B064-7F2F14A1B647",
      "productId": "A3E37B80-75B9-4E16-B28E-1B1D8B635539",
      "productName": "Laptop",
      "quantity": 1,
      "price": 150
    }
  ]
}

Resposta Esperada (200 OK):
{
  "id": "DA0A8F7C-A07C-429F-B064-7F2F14A1B647",
  "userId": "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A",
  "userName": "John Doe",
  "userEmail": "johndoe@example.com",
  "orderNumber": "ORD-1002",
  "paymentMethod": "Credit Card",
  "address": "123 Main St",
  "city": "Springfield",
  "region": "Illinois",
  "postalCode": "62701",
  "total": 150,
  "orderStatus": "Enviado",
  "created": "2024-11-30T21:26:53.930Z",
  "lastUpdated": "2024-11-30T21:26:53.930Z"
}
Resultado do Teste: SUCESSO

5. PUT /api/Order/UpdateOrder

Parâmetro:
- orderId: "DA0A8F7C-A07C-429F-B064-7F2F14A1B647"

Corpo da Requisição:
{
  "userId": "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A",
  "userName": "John Doe",
  "userEmail": "johndoe@example.com",
  "orderNumber": "ORD-1002",
  "paymentMethod": "Credit Card",
  "address": "123 Main St",
  "city": "Springfield",
  "region": "Illinois",
  "postalCode": "62701",
  "total": 200
}

Resposta Esperada (200 OK):
{
  "id": "DA0A8F7C-A07C-429F-B064-7F2F14A1B647",
  "userId": "F7E1D2E3-19E5-4898-8B9D-1B7C4C4A2A8A",
  "userName": "John Doe",
  "userEmail": "johndoe@example.com",
  "orderNumber": "ORD-1002",
  "paymentMethod": "Credit Card",
  "address": "123 Main St",
  "city": "Springfield",
  "region": "Illinois",
  "postalCode": "62701",
  "total": 200,
  "orderStatus": "Enviado",
  "created": "2024-11-30T21:26:53.933Z",
  "lastUpdated": "2024-11-30T21:26:53.933Z"
}
Resultado do Teste: SUCESSO


### Teste do Componente Front-end - Signup - Criação de Conta

- **Testado o componente de signup** no frontend, utilizando a implementação fornecida.
- **Ação executada**: Criação de uma conta com os seguintes dados de teste:

  - Nome: "João Silva"
  - Email: "joao.silva@example.com"
  - Senha: "Senha@123"
  - Telefone: "(11) 98765-4321"
  - Endereço: "Rua das Flores, 123"
  - Cidade: "São Paulo"
  - Estado: "SP"
  - CPF: "123.456.789-00"
  - CEP: "12345-678"

- **Resultado esperado**: Conta criada com sucesso, sem erros. O botão de "Cadastrar" foi clicado e, após o envio do formulário, o usuário foi registrado.
- **Resultado do teste**: O cadastro foi realizado com sucesso, a mensagem de sucesso foi exibida ("Usuário criado com sucesso!") e não houve erros na resposta.

**Log da resposta da API**:
- A resposta da API foi verificada no console do navegador e apresentou um status de sucesso, com o novo usuário registrado no banco de dados.
- **API chamada**: `POST https://localhost:44333/api/User/CreateUser`
- **Resultado da API**: Sucesso na criação do usuário, a API respondeu conforme esperado.

**Verificação do comportamento do formulário**:
- O componente exibiu corretamente as mensagens de sucesso e erro.
- Todos os campos foram validados e preenchidos corretamente.
- A navegação foi realizada corretamente, direcionando o usuário para o estado adequado após o sucesso.

Resultado do teste: **SUCESSO** 


### Teste do Componente Front-end - Login - Acesso à Conta

- **Testado o componente de login** no frontend, utilizando a implementação fornecida.
- **Ação executada**: Realização de login com os seguintes dados de teste:

  - Email: "joao.silva@example.com"
  - Senha: "Senha@123"

- **Resultado esperado**: Login realizado com sucesso, permitindo o acesso à conta do usuário. Se as credenciais estiverem corretas, o usuário será redirecionado para a página principal ou receberá a resposta de sucesso.
- **Resultado do teste**: O login foi realizado com sucesso. Após a validação do email e senha, a API respondeu com um id válido, e o usuário foi autenticado com sucesso.

**Log da resposta da API**:
- A resposta da API foi verificada no console do navegador e apresentou um status de sucesso, com o retorno do usuário autenticado, incluindo o ID do usuário.
- **API chamada**: `GET https://localhost:44333/api/User/Login?Email=joao.silva@example.com&Password=Senha@123`
- **Resultado da API**: Resposta de sucesso com dados do usuário e status de ativação correto.

**Verificação do comportamento do formulário**:
- Caso o usuário tenha as credenciais válidas e ativas, o login foi realizado com sucesso e o componente direcionou para a ação de login.
- Se o usuário estiver desativado, a mensagem de erro foi corretamente exibida.
- **Mensagens de erro**: "Erro ao realizar login. Verifique suas credenciais." ou "O usuário está desativado." foram exibidas adequadamente conforme a situação.

Resultado do teste: **SUCESSO** 

### Teste de Front-end - Edição de Perfil 

- **Testado o componente de edição de perfil**, com a funcionalidade de atualização de informações do usuário.
- **Ação executada**: 
  - O usuário clicou no botão **"Editar"** para começar a edição do perfil.
  - Atualização de campos como nome, telefone, endereço, cidade, estado, CPF e senha.
  - Clique no botão **"Salvar"** para aplicar as mudanças.

- **Resultado esperado**: O perfil do usuário foi atualizado corretamente e as alterações foram salvas no backend.

- **Resultado do teste**: 
  - O formulário foi preenchido com as informações do usuário.
  - As alterações feitas nos campos foram refletidas no estado local.
  - A validação da senha foi realizada corretamente. Caso as senhas não correspondessem, a mensagem de erro "As senhas não correspondem. Por favor, tente novamente." seria exibida. No caso de sucesso, o botão **"Salvar"** foi clicado e as informações foram enviadas para a API.
  - As informações obrigatórias foram verificadas corretamente, como nome, telefone, endereço, cidade, estado, CPF e CEP.
  - **Requisição de atualização enviada**: `PUT https://localhost:44333/api/User/UpdateUser?id=${userInfo.id}` com os dados atualizados.
  
**Log da resposta da API**:
- **Resposta da API**: Código de sucesso retornado, indicando que o perfil foi atualizado com sucesso.
- Mensagem de sucesso: "Informações atualizadas com sucesso!"

**Verificação do comportamento do formulário**:
- Todos os campos obrigatórios foram preenchidos corretamente, e a senha foi atualizada se fornecida.
- Caso o usuário não preenchesse todos os campos obrigatórios, seria exibida a mensagem "Por favor, preencha todos os campos obrigatórios."
- A senha foi validada corretamente e as mudanças foram salvas sem erros.

**Resultado do teste**: **SUCESSO** 

### Teste de Front-end - Gerenciamento de Produtos pelo Admin

- **Objetivo**: Verificar a funcionalidade de gerenciamento de produtos (criação, edição e ativação/desativação) para um administrador.

#### 1. Criação de Produto
- **Ação**: O administrador clica no ícone de **"Adicionar Produto"** para abrir o modal de criação.
- **Campos preenchidos**:
  - Nome: "Produto Teste"
  - Descrição: "Produto para teste"
  - Imagem: "http://imagem.com/teste.jpg"
  - Informações: "Informações adicionais do produto"
  - Preço: 100,00
- **Ação adicional**: O administrador clica no botão **"Criar Produto"**.
- **Resultado esperado**: O produto é criado com sucesso, uma notificação de sucesso é exibida, e a lista de produtos é atualizada.
- **Resultado do teste**: Produto criado corretamente e exibido na tabela de produtos.

#### 2. Edição de Produto
- **Ação**: O administrador clica no botão **"Editar"** para editar um produto existente.
- **Campos editados**:
  - Nome: "Produto Editado"
  - Descrição: "Descrição atualizada"
  - Imagem: "http://imagem.com/novo.jpg"
  - Informações: "Novas informações do produto"
  - Preço: 120,00
- **Ação adicional**: O administrador clica no botão **"Atualizar Produto"**.
- **Resultado esperado**: O produto é atualizado com sucesso, uma notificação de sucesso é exibida, e a lista de produtos é atualizada.
- **Resultado do teste**: Produto atualizado corretamente e refletido na tabela.

#### 3. Ativação/Desativação de Produto
- **Ação**: O administrador clica no botão **"Ativo/Desativado"** de um produto.
- **Estado inicial**: Produto está ativo.
- **Ação adicional**: O administrador clica no botão para desativar o produto.
- **Resultado esperado**: O status do produto é alterado para **"Desativado"** e a lista de produtos é atualizada.
- **Resultado do teste**: Status alterado corretamente e refletido na tabela.

#### 4. Verificação de Fluxos de Erro
- **Ação**: O administrador tenta criar ou editar um produto sem preencher todos os campos obrigatórios.
- **Resultado esperado**: A API retorna um erro e a interface exibe a mensagem de erro apropriada, solicitando o preenchimento dos campos obrigatórios.

#### Resultado Final:
- **Criação de Produto**: **SUCESSO** 
- **Edição de Produto**: **SUCESSO** 
- **Ativação/Desativação**: **SUCESSO** 
- **Fluxos de Erro**: **SUCESSO** 

**Conclusão**: O gerenciamento de produtos para o administrador está funcionando conforme o esperado.




### Teste de Front-end - Gerenciamento de Usuários pelo Admin

- **Objetivo**: Verificar as funcionalidades de gerenciamento de usuários (edição e ativação/desativação) para o administrador.

#### 1. Edição de Usuário
- **Ação**: O administrador clica no botão **"Editar"** para editar um usuário existente.
- **Campos editados**:
  - Nome: "Novo Nome"
  - Email: "novonome@dominio.com"
  - Telefone: "(11) 99999-9999"
  - Endereço: "Rua Nova, 123"
  - Cidade: "São Paulo"
  - Região: "SP"
  - CPF: "123.456.789-00"
  - CEP: "01234-567"
  - Role: "Admin"
  - Senha: "novaSenha123"
  - Confirmar Senha: "novaSenha123"
- **Ação adicional**: O administrador clica no botão **"Atualizar Usuário"**.
- **Resultado esperado**: O usuário é atualizado com sucesso, uma notificação de sucesso é exibida, e a lista de usuários é atualizada.
- **Resultado do teste**: Usuário editado corretamente e refletido na tabela.

#### 2. Alteração de Senha
- **Ação**: O administrador decide editar a senha de um usuário, preenchendo os campos de **"Nova Senha"** e **"Confirmar Senha"**.
- **Senhas preenchidas**:
  - Nova Senha: "novaSenha123"
  - Confirmar Senha: "novaSenha123"
- **Resultado esperado**: Se as senhas coincidirem, o processo de atualização de senha é bem-sucedido e o usuário é notificado.
- **Resultado do teste**: Senha alterada corretamente.

#### 3. Ativação/Desativação de Usuário
- **Ação**: O administrador clica no botão **"Ativo/Desativado"** de um usuário.
- **Estado inicial**: Usuário está ativo.
- **Ação adicional**: O administrador clica no botão para desativar o usuário.
- **Resultado esperado**: O status do usuário é alterado para **"Desativado"** e a lista de usuários é atualizada.
- **Resultado do teste**: Status alterado corretamente para desativado.

#### 4. Verificação de Fluxos de Erro
- **Ação**: O administrador tenta editar um usuário sem preencher todos os campos obrigatórios (por exemplo, deixando o campo **"Nome"** em branco).
- **Resultado esperado**: A interface exibe uma mensagem de erro, solicitando o preenchimento de todos os campos obrigatórios.
- **Resultado do teste**: Erro detectado corretamente, e a interface exibe a mensagem apropriada.

#### 5. Confirmação de Senha
- **Ação**: O administrador tenta alterar a senha e não confirma corretamente a nova senha.
- **Resultado esperado**: O sistema exibe um alerta informando que as senhas não coincidem e impede a atualização do usuário.
- **Resultado do teste**: Alerta exibido corretamente.

#### Resultado Final:
- **Edição de Usuário**: **SUCESSO** 
- **Alteração de Senha**: **SUCESSO** 
- **Ativação/Desativação de Usuário**: **SUCESSO** 
- **Fluxos de Erro**: **SUCESSO** 

**Conclusão**: O gerenciamento de usuários para o administrador está funcionando corretamente, incluindo a edição de dados, alteração de senha e controle de status.

### Conclusão
Todos os testes aprovados, Back - end e Front- end funcionam conforme esperado, Aplicação pronta para o desenvolvimento adicional ou implementação.

